#
# Please consult the `Deployment` section in the docs if you want to deploy
# this. You *need* to keep this nginx service, even if you have your own,
# otherwise the static files will not be served correctly! If you do remove
# it, configure yours similarly to what's in config/nginx.conf
# Also take a look at the "Static files" section in the .env file

services:
  web:
    image: docker.io/wger/server:2.3-dev
    container_name: wger
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    env_file:
      - ./app.env
      - ./app.secret.env
    volumes:
      - static:/home/wger/static
      - media:/home/wger/media
    expose:
      - 8000
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8000
      interval: 10s
      timeout: 5s
      start_period: 300s
      retries: 5
    restart: unless-stopped

  nginx:
    image: docker.io/library/nginx:1.29.1
    container_name: wger-nginx
    depends_on:
      - web
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static:/wger/static:ro
      - media:/wger/media:ro
    ports:
      - 8989:80
    healthcheck:
      test: service nginx status
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  db:
    image: docker.io/library/postgres:17.5-alpine
    container_name: wger-db
    env_file:
      - ./postgres.secret.env
    environment:
      - POSTGRES_USER=wger
      - POSTGRES_DB=wger
      - TZ=America/New_York
    volumes:
      - postgres:/var/lib/postgresql/data/
    expose:
      - 5432
    healthcheck:
      test: pg_isready -U wger
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  cache:
    image: docker.io/library/redis:8.2.1
    container_name: wger-redis
    expose:
      - 6379
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
      - redis:/data
    command:
      - redis-server
      - /usr/local/etc/redis/redis.conf
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

    # You probably want to limit the memory usage of the cache, otherwise it might
    # hog all the available memory. Remove or change according to your needs.
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 2048MiB
        reservations:
          cpus: '0.25'
          memory: 256MiB

  celery_worker:
    image: docker.io/wger/server:2.3-dev
    container_name: wger-worker
    command: /start-worker
    env_file:
      - ./app.env
      - ./app.secret.env
    volumes:
      - media:/home/wger/media
    depends_on:
      web:
        condition: service_healthy
    healthcheck:
      test: celery -A wger inspect ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  celery_beat:
    image: docker.io/wger/server:2.3-dev
    container_name: wger-beat
    command: /start-beat
    volumes:
      - celery:/home/wger/beat/
    env_file:
      - ./app.env
      - ./app.secret.env
    depends_on:
      celery_worker:
        condition: service_healthy

volumes:
  postgres:
    name: wger-postgres
  celery:
    name: wger-celery
  redis:
    name: wger-redis

  # Heads up, if you remove these volumes and use folders directly you need to chown them
  # to the UID and GID 1000 even if it doesn't exist on your system. Also, they should
  # be readable by everyone.
  #
  # https://wger.readthedocs.io/en/latest/production/docker.html#missing-static-files
  media:
    name: wger-media
  static:
    name: wger-static

networks:
  default:
    name: wger